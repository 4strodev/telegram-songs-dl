version: '3'

dotenv: ['.env']

vars:
  imageName: 4strodev/telegram-songs-dl
  tagFile: tag.txt

tasks:
  run:
    dir: ./bot
    cmd: go run ./cmd
    dotenv: ['.env']

  docker:start:
    cmds:
      - docker compose -f bot/docker-compose.yml up

  docker:build:compose:
    cmds:
      - docker compose -f bot/docker-compose.yml build

  docker:remove_builds:
    cmds:
      - docker images --format "{{ "{{" }} .Repository {{ "}}" }}:{{ "{{" }} .Tag {{ "}}" }}" | grep "^{{ .imageName }}" | xargs -r docker rmi

  docker:list_builds:
    cmds:
      - docker images -f 'reference={{ .imageName }}'

  docker:build:
    cmds:
      - echo "{{ .dateTag }}" > {{ .tagFile }}
      - docker buildx build --platform linux/amd64,linux/arm64 --load -t {{ .imageName }}:{{ .dateTag }} ./bot/
      - docker tag {{ .imageName }}:{{ .dateTag }} {{ .imageName }}:latest
    vars:
      dateTag:
        sh: echo $(date "+%y-%m-%d_%H-%M")

  docker:clean:
    cmds:
      - rm {{ .tagFile }}

  docker:publish:
    preconditions:
      - test -f {{ .tagFile }}
    cmds:
      - docker push {{ .imageName }}:$(cat {{ .tagFile }})
      - task docker:clean
